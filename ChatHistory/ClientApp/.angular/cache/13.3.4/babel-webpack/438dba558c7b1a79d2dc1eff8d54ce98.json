{"ast":null,"code":"function cov_17eoqhxmvn() {\n  var path = \"C:\\\\Dev\\\\Personal\\\\ChatHistory\\\\ChatHistory\\\\ClientApp\\\\src\\\\app\\\\pipes\\\\utc-to-local-time.pipe.ts\";\n  var hash = \"fe0d0455f54ae351c93c45e56cc4939c0aee0dbc\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Dev\\\\Personal\\\\ChatHistory\\\\ChatHistory\\\\ClientApp\\\\src\\\\app\\\\pipes\\\\utc-to-local-time.pipe.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 4,\n          column: 25\n        },\n        end: {\n          line: 21,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 30\n        },\n        end: {\n          line: 6,\n          column: 48\n        }\n      },\n      \"2\": {\n        start: {\n          line: 7,\n          column: 19\n        },\n        end: {\n          line: 7,\n          column: 47\n        }\n      },\n      \"3\": {\n        start: {\n          line: 8,\n          column: 8\n        },\n        end: {\n          line: 19,\n          column: 9\n        }\n      },\n      \"4\": {\n        start: {\n          line: 10,\n          column: 31\n        },\n        end: {\n          line: 10,\n          column: 71\n        }\n      },\n      \"5\": {\n        start: {\n          line: 11,\n          column: 31\n        },\n        end: {\n          line: 11,\n          column: 111\n        }\n      },\n      \"6\": {\n        start: {\n          line: 12,\n          column: 16\n        },\n        end: {\n          line: 12,\n          column: 50\n        }\n      },\n      \"7\": {\n        start: {\n          line: 14,\n          column: 32\n        },\n        end: {\n          line: 14,\n          column: 125\n        }\n      },\n      \"8\": {\n        start: {\n          line: 15,\n          column: 32\n        },\n        end: {\n          line: 15,\n          column: 93\n        }\n      },\n      \"9\": {\n        start: {\n          line: 16,\n          column: 16\n        },\n        end: {\n          line: 16,\n          column: 53\n        }\n      },\n      \"10\": {\n        start: {\n          line: 18,\n          column: 16\n        },\n        end: {\n          line: 18,\n          column: 26\n        }\n      },\n      \"11\": {\n        start: {\n          line: 22,\n          column: 0\n        },\n        end: {\n          line: 26,\n          column: 23\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 4\n          },\n          end: {\n            line: 5,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 31\n          },\n          end: {\n            line: 20,\n            column: 5\n          }\n        },\n        line: 5\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 8,\n            column: 8\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        },\n        type: \"switch\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 12\n          },\n          end: {\n            line: 12,\n            column: 50\n          }\n        }, {\n          start: {\n            line: 13,\n            column: 12\n          },\n          end: {\n            line: 16,\n            column: 53\n          }\n        }, {\n          start: {\n            line: 17,\n            column: 12\n          },\n          end: {\n            line: 18,\n            column: 26\n          }\n        }],\n        line: 8\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"utc-to-local-time.pipe.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Dev\\\\Personal\\\\ChatHistory\\\\ChatHistory\\\\ClientApp\\\\src\\\\app\\\\pipes\\\\utc-to-local-time.pipe.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;AACpD,OAAO,EAAE,wBAAwB,EAAE,MAAM,sBAAsB,CAAC;IAKnD,kBAAkB,SAAlB,kBAAkB;IAE7B,SAAS,CAAC,OAAa,EAAE,MAAyC;QAChE,IAAI,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC;QACzC,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAExC,QAAQ,MAAM,EAAE;YACd,KAAK,CAAC,wBAAwB,CAAC,IAAI,CAAC;gBAClC,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;gBACxD,IAAI,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;gBAChG,OAAO,GAAG,QAAQ,KAAK,QAAQ,EAAE,CAAC;YACpC,KAAK,CAAC,wBAAwB,CAAC,KAAK,CAAC;gBACnC,IAAI,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAC,OAAO,EAAE,IAAI,EAAC,SAAS,EAAC,CAAC,CAAC;gBAC3G,IAAI,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC,CAAC;gBAC7E,OAAO,GAAG,SAAS,MAAM,SAAS,EAAE,CAAC;YACvC;gBACE,OAAO,EAAE,CAAC;SACb;IACH,CAAC;CAEF,CAAA;AApBY,kBAAkB;IAH9B,IAAI,CAAC;QACJ,IAAI,EAAE,gBAAgB;KACvB,CAAC;GACW,kBAAkB,CAoB9B;SApBY,kBAAkB\",\n      sourcesContent: [\"import { Pipe, PipeTransform } from '@angular/core';\\nimport { UtcToLocalDateTimeFormat } from './models/date-format';\\n\\n@Pipe({\\n  name: 'utcToLocalTime'\\n})\\nexport class UtcToLocalTimePipe implements PipeTransform {\\n\\n  transform(utcDate: Date, format: string | UtcToLocalDateTimeFormat): string {\\n    let browserLanguage = navigator.language;\\n    let date = new Date(utcDate.toString());\\n\\n    switch (format) {\\n      case (UtcToLocalDateTimeFormat.Full):\\n        let fullDate = date.toLocaleDateString(browserLanguage);\\n        let fullTime = date.toLocaleTimeString(browserLanguage, { hour: '2-digit', minute: '2-digit' });\\n        return `${fullDate}, ${fullTime}`;\\n      case (UtcToLocalDateTimeFormat.Short):\\n        let shortDate = date.toLocaleDateString(browserLanguage, { day: 'numeric', month:'short', year:'numeric'});\\n        let shortTime = date.toLocaleTimeString(browserLanguage, { hour: 'numeric'});\\n        return `${shortDate} - ${shortTime}`;\\n      default:\\n        return ``;\\n    }\\n  }\\n\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"fe0d0455f54ae351c93c45e56cc4939c0aee0dbc\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_17eoqhxmvn = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_17eoqhxmvn();\nimport { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\nimport { UtcToLocalDateTimeFormat } from './models/date-format';\ncov_17eoqhxmvn().s[0]++;\nlet UtcToLocalTimePipe = class UtcToLocalTimePipe {\n  transform(utcDate, format) {\n    cov_17eoqhxmvn().f[0]++;\n    let browserLanguage = (cov_17eoqhxmvn().s[1]++, navigator.language);\n    let date = (cov_17eoqhxmvn().s[2]++, new Date(utcDate.toString()));\n    cov_17eoqhxmvn().s[3]++;\n\n    switch (format) {\n      case UtcToLocalDateTimeFormat.Full:\n        cov_17eoqhxmvn().b[0][0]++;\n        let fullDate = (cov_17eoqhxmvn().s[4]++, date.toLocaleDateString(browserLanguage));\n        let fullTime = (cov_17eoqhxmvn().s[5]++, date.toLocaleTimeString(browserLanguage, {\n          hour: '2-digit',\n          minute: '2-digit'\n        }));\n        cov_17eoqhxmvn().s[6]++;\n        return `${fullDate}, ${fullTime}`;\n\n      case UtcToLocalDateTimeFormat.Short:\n        cov_17eoqhxmvn().b[0][1]++;\n        let shortDate = (cov_17eoqhxmvn().s[7]++, date.toLocaleDateString(browserLanguage, {\n          day: 'numeric',\n          month: 'short',\n          year: 'numeric'\n        }));\n        let shortTime = (cov_17eoqhxmvn().s[8]++, date.toLocaleTimeString(browserLanguage, {\n          hour: 'numeric'\n        }));\n        cov_17eoqhxmvn().s[9]++;\n        return `${shortDate} - ${shortTime}`;\n\n      default:\n        cov_17eoqhxmvn().b[0][2]++;\n        cov_17eoqhxmvn().s[10]++;\n        return ``;\n    }\n  }\n\n};\ncov_17eoqhxmvn().s[11]++;\nUtcToLocalTimePipe = __decorate([Pipe({\n  name: 'utcToLocalTime'\n})], UtcToLocalTimePipe);\nexport { UtcToLocalTimePipe };","map":{"version":3,"sources":["C:/Dev/Personal/ChatHistory/ChatHistory/ClientApp/src/app/pipes/utc-to-local-time.pipe.ts"],"names":["__decorate","Pipe","UtcToLocalDateTimeFormat","UtcToLocalTimePipe","transform","utcDate","format","browserLanguage","navigator","language","date","Date","toString","Full","fullDate","toLocaleDateString","fullTime","toLocaleTimeString","hour","minute","Short","shortDate","day","month","year","shortTime","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;;AACA,IAAIC,kBAAkB,GAAG,MAAMA,kBAAN,CAAyB;AAC9CC,EAAAA,SAAS,CAACC,OAAD,EAAUC,MAAV,EAAkB;AAAA;AACvB,QAAIC,eAAe,6BAAGC,SAAS,CAACC,QAAb,CAAnB;AACA,QAAIC,IAAI,6BAAG,IAAIC,IAAJ,CAASN,OAAO,CAACO,QAAR,EAAT,CAAH,CAAR;AAFuB;;AAGvB,YAAQN,MAAR;AACI,WAAMJ,wBAAwB,CAACW,IAA/B;AAAA;AACI,YAAIC,QAAQ,6BAAGJ,IAAI,CAACK,kBAAL,CAAwBR,eAAxB,CAAH,CAAZ;AACA,YAAIS,QAAQ,6BAAGN,IAAI,CAACO,kBAAL,CAAwBV,eAAxB,EAAyC;AAAEW,UAAAA,IAAI,EAAE,SAAR;AAAmBC,UAAAA,MAAM,EAAE;AAA3B,SAAzC,CAAH,CAAZ;AAFJ;AAGI,eAAQ,GAAEL,QAAS,KAAIE,QAAS,EAAhC;;AACJ,WAAMd,wBAAwB,CAACkB,KAA/B;AAAA;AACI,YAAIC,SAAS,6BAAGX,IAAI,CAACK,kBAAL,CAAwBR,eAAxB,EAAyC;AAAEe,UAAAA,GAAG,EAAE,SAAP;AAAkBC,UAAAA,KAAK,EAAE,OAAzB;AAAkCC,UAAAA,IAAI,EAAE;AAAxC,SAAzC,CAAH,CAAb;AACA,YAAIC,SAAS,6BAAGf,IAAI,CAACO,kBAAL,CAAwBV,eAAxB,EAAyC;AAAEW,UAAAA,IAAI,EAAE;AAAR,SAAzC,CAAH,CAAb;AAFJ;AAGI,eAAQ,GAAEG,SAAU,MAAKI,SAAU,EAAnC;;AACJ;AAAA;AAAA;AACI,eAAQ,EAAR;AAVR;AAYH;;AAhB6C,CAAlD;;AAkBAtB,kBAAkB,GAAGH,UAAU,CAAC,CAC5BC,IAAI,CAAC;AACDyB,EAAAA,IAAI,EAAE;AADL,CAAD,CADwB,CAAD,EAI5BvB,kBAJ4B,CAA/B;AAKA,SAASA,kBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Pipe } from '@angular/core';\r\nimport { UtcToLocalDateTimeFormat } from './models/date-format';\r\nlet UtcToLocalTimePipe = class UtcToLocalTimePipe {\r\n    transform(utcDate, format) {\r\n        let browserLanguage = navigator.language;\r\n        let date = new Date(utcDate.toString());\r\n        switch (format) {\r\n            case (UtcToLocalDateTimeFormat.Full):\r\n                let fullDate = date.toLocaleDateString(browserLanguage);\r\n                let fullTime = date.toLocaleTimeString(browserLanguage, { hour: '2-digit', minute: '2-digit' });\r\n                return `${fullDate}, ${fullTime}`;\r\n            case (UtcToLocalDateTimeFormat.Short):\r\n                let shortDate = date.toLocaleDateString(browserLanguage, { day: 'numeric', month: 'short', year: 'numeric' });\r\n                let shortTime = date.toLocaleTimeString(browserLanguage, { hour: 'numeric' });\r\n                return `${shortDate} - ${shortTime}`;\r\n            default:\r\n                return ``;\r\n        }\r\n    }\r\n};\r\nUtcToLocalTimePipe = __decorate([\r\n    Pipe({\r\n        name: 'utcToLocalTime'\r\n    })\r\n], UtcToLocalTimePipe);\r\nexport { UtcToLocalTimePipe };\r\n"]},"metadata":{},"sourceType":"module"}